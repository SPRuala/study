将现有的Spring boot项目作为一个服务，注册到nacos
1.引入Nacos服务注册与发现的依赖
    <!--dependencyManagement: 依赖管理中心,针对依赖做管理,不会对它们进行导入-->
 <!--nacos组件需要在依赖管理中心中导入相应的Spring Cloud依赖和Spring Cloud Alibaba依赖-->
    <dependencyManagement>
        <dependencies>
            <!--Spring Cloud依赖-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2020.0.4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--Spring Cloud Alibaba依赖-->
          <!--如果要使用Spring Cloud Alibaba的组件,必须要匹配Spring Cloud相关的版本号-->
            <!--版本号不同在使用时容易出现bug-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2.2.5.RELEASE</version>
                <type>pom</type> <!--和微服务相关的总包都会以pom的形式导入到管理器中-->
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
  <dependencies>
        <!--引入nacos 服务注册与发现 依赖-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
  </dependencies>
2.配置yaml文件
spring:
  #配置Nacos(不需要账号密码的配置)
  cloud:
    nacos:
      discovery: #配置服务的发现
      #nacos服务所在地址; (服务器ip:端口号)(若要进行生产部署,则此处公网ip必须换为内网ip)
        server-addr: 122.51.6.228:8848
  application: #配置服务
    name: springboot_bc #为服务起名字(每个服务都有自己的名字)
#配置开启依赖监控
management:
  endpoints:
    web:
      exposure:
        include: '*'
3.为启动类添加注解@EnableDiscoveryClient 开启Discovery的客户端
4.开启/重启项目（也可以被叫做服务），前往nacos系统管理页面查看该服务是否被成功注册（查看服务名是否被注册进服务列表）